// Generated by Selenium IDE

require('chromedriver');
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('SepeteEkleCikar', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('SepeteEkleCikar', async function() {
    await driver.get("https://www.testrelic.com/bugshop/")
    await driver.manage().window().setRect({ width: 974, height: 1040 })
    await driver.findElement(By.xpath("//ul[@id=\'primary-menu\']/li[2]/a")).click()
    await driver.findElement(By.css(".edd_download_title")).click()
    await driver.findElement(By.name("edd_download_quantity")).clear()
    await driver.findElement(By.name("edd_download_quantity")).sendKeys("2")
    await driver.findElement(By.name("edd_download_quantity")).click()
    // Sepete ekle
    await driver.findElement(By.css(".edd-add-to-cart.button.edd-submit.edd-has-js")).click()
    await driver.wait(until.elementLocated(By.linkText("Remove")), 8000)
    await driver.wait(until.elementTextIs(await driver.findElement(By.linkText("Remove")), 'Remove'), 8000)
    await driver.findElement(By.linkText("Remove")).click()

    await driver.findElement(By.id("edd_checkout_wrap")).click()

    assert(await driver.findElement(By.css(".edd_empty_cart")).getText() == "Your cart is empty.")
  })
})
